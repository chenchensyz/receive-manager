<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.cyber.dao.ReceiveLogMapper">
    <resultMap id="BaseResultMap" type="cn.com.cyber.model.ReceiveLog">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="app_key" property="appKey" jdbcType="VARCHAR"/>
        <result column="service_key" property="serviceKey" jdbcType="VARCHAR"/>
        <result column="request_time" property="requestTime" jdbcType="TIMESTAMP"/>
        <result column="response_time" property="responseTime" jdbcType="TIMESTAMP"/>
        <result column="response_code" property="responseCode" jdbcType="INTEGER"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="params" property="params" jdbcType="VARCHAR"/>
        <result column="app_name" property="appName" jdbcType="VARCHAR"/>
        <result column="service_name" property="serviceName" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, app_key, service_key, request_time, response_time, response_code, remark, params
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from se_receive_log
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from se_receive_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insertReceiveLog" parameterType="cn.com.cyber.model.ReceiveLog">
        insert into se_receive_log( app_key, service_key, request_time, response_time, response_code
        <if test="remark != null">
            ,remark
        </if>
        <if test="params != null">
            ,params
        </if>
        )
        values( #{appKey},#{serviceKey},#{requestTime},#{responseTime},#{responseCode}
        <if test="remark != null">
            ,#{remark}
        </if>
        <if test="params != null">
            ,#{params}
        </if>
        )
    </insert>

    <sql id="sql_where">
        <where>
            <if test="creator != null">
                and ais.creator = #{creator}
            </if>
            <if test="appName != null and appName !=''">
                <bind name="appNameSec" value=" '%' + appName + '%' "/>
                and ai.name like #{appNameSec}
            </if>
            <if test="serviceName != null and serviceName !=''">
                <bind name="serviceNameSec" value=" '%' + serviceName + '%' "/>
                and ais.service_name like #{serviceNameSec}
            </if>
            <if test="appKey != null and appKey !=''">
                and rl.app_key = #{appKey,jdbcType=VARCHAR}
            </if>
            <if test="serviceKey != null and serviceKey !=''">
                and rl.service_key = #{serviceKey,jdbcType=VARCHAR}
            </if>
            <if test="beginTime != null and beginTime != ''">
                and rl.request_time &gt;= #{beginTime}
            </if>
            <if test="endTime != null and endTime != ''">
                and rl.request_time &lt;= #{endTime}
            </if>
            <if test="responseCode != null">
                and rl.response_code = #{responseCode}
            </if>
        </where>
    </sql>

    <select id="getReceiveLogListCount" resultType="int" parameterType="cn.com.cyber.model.ReceiveLog">
        select count(*) from se_receive_log rl
        LEFT JOIN td_app ai ON rl.app_key = ai.app_uuid
        LEFT JOIN se_service_info ais ON rl.service_key = ais.service_key
        <include refid="sql_where"/>
    </select>

    <select id="getReceiveLogList" resultMap="BaseResultMap" parameterType="cn.com.cyber.model.ReceiveLog">
        SELECT rl.*,
        ai.NAME app_name,
        ais.service_name,
        ais.url_suffix url
        from se_receive_log rl
        LEFT JOIN  td_app ai ON rl.app_key = ai.app_uuid
        LEFT JOIN se_service_info ais ON rl.service_key = ais.service_key
        <include refid="sql_where"/>
        ORDER BY request_time DESC
        LIMIT  #{pageNum},#{pageSize}
    </select>


    <select id="getReceiveLogCount" resultType="int" parameterType="long">
        select count(*) from se_receive_log rl
        LEFT JOIN td_app ai ON rl.app_key = ai.app_uuid
        LEFT JOIN td_company tc on tc.id = ai.company_id
        LEFT JOIN se_service_info ais ON rl.service_key = ais.service_key
        <where>
            <if test="creator != null">
                and ais.creator = #{creator}
            </if>
        </where>
    </select>

    <select id="getReceiveLogRanking" resultType="int" parameterType="map">
        select ifnull(e.receive_num,0) receive_num from
        (
        <foreach collection="dateList" item="item" index="index" separator="UNION ALL">
            SELECT #{item} dt FROM DUAL
        </foreach>
        ) d
        left join
        (
        SELECT count(slo.id) receive_num,slo.dt from (
        select t.id ,STR_TO_DATE(t.request_time, '%Y-%m-%d') dt
        from SE_RECEIVE_LOG t left join se_service_info ssi on t.service_key = ssi.service_key
        where t.request_time
        between STR_TO_DATE(#{startTime}, '%Y-%m-%d') and STR_TO_DATE(#{endTime}, '%Y-%m-%d')+1
        <if test="creator != null">
            and ssi.creator = #{creator}
        </if>
        <if test="code == 1">
            and t.response_code = 200
        </if>
        <if test="code == 2">
            and t.response_code != 200
        </if>
        ) slo
        group by slo.dt
        ) e
        on d.dt=e.dt order by d.dt
    </select>
</mapper>