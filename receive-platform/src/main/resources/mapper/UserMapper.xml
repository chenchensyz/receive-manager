<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.cyber.dao.UserMapper">
    <resultMap id="BaseResultMap" type="cn.com.cyber.model.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="telephone" property="telephone" jdbcType="VARCHAR"/>
        <result column="company_id" property="companyId" jdbcType="BIGINT"/>
        <result column="role_id" property="roleId" jdbcType="INTEGER"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
     id, user_id, password, nick_name, email, telephone, company_id, remark, state ,role_id,
    create_time, update_time
  </sql>

    <select id="selectUserById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from se_user where id = #{id}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from se_user where id = #{id}
  </delete>

    <insert id="insertUser" parameterType="cn.com.cyber.model.User">
        <selectKey keyProperty="id" order="BEFORE" resultType="long">
            SELECT SEQ_SE_USER.NEXTVAL AS VALUE FROM DUAL
        </selectKey>
        insert into se_user(
        id, user_id, password, role_id, state,
        <if test="nickName != null">
            nick_name,
        </if>
        <if test="email != null">
            email,
        </if>
        <if test="telephone != null">
            telephone,
        </if>
        <if test="companyId != null">
            company_id,
        </if>
        <if test="remark != null">
            remark,
        </if>
        create_time)
        values( #{id}, #{userId}, #{password}, #{roleId}, 1,
        <if test="nickName != null">
            #{nickName,jdbcType=VARCHAR},
        </if>
        <if test="email != null">
            #{email,jdbcType=VARCHAR},
        </if>
        <if test="telephone != null">
            #{telephone,jdbcType=VARCHAR},
        </if>
        <if test="companyId != null">
            #{companyId,jdbcType=BIGINT},
        </if>
        <if test="remark != null">
            #{remark,jdbcType=VARCHAR},
        </if>
        sysdate)
    </insert>

    <update id="updateUser" parameterType="cn.com.cyber.model.User">
        update se_user
        <set>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                telephone = #{telephone,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
            <if test="roleId != null">
                role_id = #{roleId},
            </if>
            <if test="state != null">
                state = #{state},
            </if>
            update_time = sysdate
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <sql id="sql_where">
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null and userId !=''">
                and user_id= #{userId}
            </if>
            <if test="nickName != null and nickName !=''">
                and nick_name like "%"#{nickName}"%"
            </if>
            <if test="state != null">
                and state = #{state}
            </if>
        </where>
    </sql>

    <select id="getUserList" resultMap="BaseResultMap" parameterType="cn.com.cyber.model.User">
        select * from se_user
        <include refid="sql_where"/>
    </select>

    <update id="deleteUserState" parameterType="map">
    update se_user set state= #{state}  where  user_id=#{userId}
  </update>

    <select id="getUserAndRoles" resultMap="BaseResultMap" parameterType="long">
     SELECT u.* , ur.user_id user_id_r, ur.role_id
     FROM se_user u left JOIN se_user_role ur on u.id=ur.user_id WHERE u.id=#{id}
  </select>

    <select id="getByUserId" resultMap="BaseResultMap" parameterType="string">
    select * from se_user where user_id=#{userId}
  </select>

    <select id="getValiedUser" resultMap="BaseResultMap" parameterType="string">
     select tc.id,tc.username , sur.user_id user_id_r, sur.role_id from  se_user tc
     left join se_user_role sur on tc.id=sur.user_id where tc.username=#{userName}
  </select>

</mapper>